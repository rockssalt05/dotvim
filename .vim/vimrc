let g:plug_window = "new"
call plug#begin()
	Plug 'neoclide/coc.nvim', {'branch': 'release'}
	Plug 'jiangmiao/auto-pairs'
	Plug 'luochen1990/rainbow'
	let g:rainbow_active = 1
call plug#end()

set tabstop=4
set shiftwidth=0
set linebreak
set breakindent
set number
set signcolumn=yes
set termguicolors
colorscheme codedark
set splitbelow

set undofile
let $undodir = expand("<sfile>:h").."/undo"
if !isdirectory($undodir)
	call mkdir($undodir, "", 0700)
endif
set undodir=$undodir

let g:netrw_banner = 0

let mapleader = " "
map <silent> <leader>r :call RunFile()<CR>
map <silent> <leader>e :call CloseTerminal()<CR>

if !exists("g:os")
	if has("win64") || has("win32") || has("win16")
  	let g:os = "Windows"
	else
  	let g:os = substitute(system("uname"), "\n", "", "")
	endif
endif

function RunFile()
	let dir = "\\\""..expand("%:~:.:h").."\\\""
	let file = "\\\""..expand("%:t").."\\\""
	let name = "\\\""..expand("%:t:r").."\\\""
	let run = "./"
	let shell = "sh -c"
	if g:os == "Windows"
		let dir = substitute(l:dir, "\\", "", "g")
		let file = substitute(l:file, "\\", "", "g")
		let name = substitute(l:name, "\\", "", "g")
		let run = ""
		let shell = "cmd /c"
	endif

	let cmd = {
	\	"c": "gcc -Wall -o "..l:name.." "..l:file.." && "..l:run..l:name,
	\	"cpp": "g++ -Wall -o "..l:name.." "..l:file.." && "..l:run..l:name,
	\	"python": "python3 "..l:file,
	\	"sh": "bash "..l:file
	\}

	call CloseTerminal()
	if exists("cmd[&ft]")
		if has("terminal")
			execute "up | term ++rows=10" shell "\" cd" dir "&&" cmd[&ft] "\""
		else
			execute "up | !cd" dir "&&" cmd[&ft]
		endif
	endif
endfunction

function CloseTerminal()
	if has("terminal")
		let buf = uniq(map(filter(getwininfo(),
			\"v:val.terminal"), "v:val.bufnr"))
		if len(buf) != 0
			execute "bd!" buf[-1]
		endif
	endif
endfunction
